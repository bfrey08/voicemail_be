---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/civicinfo/v2/representatives?address=1551%20Utica%20Street,%20Denver,%20CO%2080204&key=<google_key>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Sat, 29 Jan 2022 12:18:01 GMT
      Server:
      - ESF
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICJub3JtYWxpemVkSW5wdXQiOiB7CiAgICAibGluZTEiOiAiMTU1MSBVdGljYSBTdHJlZXQiLAogICAgImNpdHkiOiAiRGVudmVyIiwKICAgICJzdGF0ZSI6ICJDTyIsCiAgICAiemlwIjogIjgwMjA0IgogIH0sCiAgImtpbmQiOiAiY2l2aWNpbmZvI3JlcHJlc2VudGF0aXZlSW5mb1Jlc3BvbnNlIiwKICAiZGl2aXNpb25zIjogewogICAgIm9jZC1kaXZpc2lvbi9jb3VudHJ5OnVzIjogewogICAgICAibmFtZSI6ICJVbml0ZWQgU3RhdGVzIiwKICAgICAgIm9mZmljZUluZGljZXMiOiBbCiAgICAgICAgMCwKICAgICAgICAxCiAgICAgIF0KICAgIH0sCiAgICAib2NkLWRpdmlzaW9uL2NvdW50cnk6dXMvc3RhdGU6Y28vY291bnR5OmRlbnZlciI6IHsKICAgICAgIm5hbWUiOiAiRGVudmVyIENvdW50eSIsCiAgICAgICJhbHNvS25vd25BcyI6IFsKICAgICAgICAib2NkLWRpdmlzaW9uL2NvdW50cnk6dXMvc3RhdGU6Y28vcGxhY2U6ZGVudmVyIgogICAgICBdLAogICAgICAib2ZmaWNlSW5kaWNlcyI6IFsKICAgICAgICAxMywKICAgICAgICAxNCwKICAgICAgICAxNSwKICAgICAgICAxNgogICAgICBdCiAgICB9LAogICAgIm9jZC1kaXZpc2lvbi9jb3VudHJ5OnVzL3N0YXRlOmNvL2NkOjEiOiB7CiAgICAgICJuYW1lIjogIkNvbG9yYWRvJ3MgMXN0IGNvbmdyZXNzaW9uYWwgZGlzdHJpY3QiLAogICAgICAib2ZmaWNlSW5kaWNlcyI6IFsKICAgICAgICAzCiAgICAgIF0KICAgIH0sCiAgICAib2NkLWRpdmlzaW9uL2NvdW50cnk6dXMvc3RhdGU6Y28vc2xkbDo0IjogewogICAgICAibmFtZSI6ICJDb2xvcmFkbyBTdGF0ZSBIb3VzZSBkaXN0cmljdCA0IiwKICAgICAgIm9mZmljZUluZGljZXMiOiBbCiAgICAgICAgMTAKICAgICAgXQogICAgfSwKICAgICJvY2QtZGl2aXNpb24vY291bnRyeTp1cy9zdGF0ZTpjby9zbGR1OjM0IjogewogICAgICAibmFtZSI6ICJDb2xvcmFkbyBTdGF0ZSBTZW5hdGUgZGlzdHJpY3QgMzQiLAogICAgICAib2ZmaWNlSW5kaWNlcyI6IFsKICAgICAgICA5CiAgICAgIF0KICAgIH0sCiAgICAib2NkLWRpdmlzaW9uL2NvdW50cnk6dXMvc3RhdGU6Y28vZGlzdHJpY3RfY291cnQ6MiI6IHsKICAgICAgIm5hbWUiOiAiQ08gU3RhdGUgRGlzdHJpY3QgQ291cnQgLSAybmQgRGlzdHJpY3QiLAogICAgICAib2ZmaWNlSW5kaWNlcyI6IFsKICAgICAgICAxMgogICAgICBdCiAgICB9LAogICAgIm9jZC1kaXZpc2lvbi9jb3VudHJ5OnVzL3N0YXRlOmNvIjogewogICAgICAibmFtZSI6ICJDb2xvcmFkbyIsCiAgICAgICJvZmZpY2VJbmRpY2VzIjogWwogICAgICAgIDIsCiAgICAgICAgNCwKICAgICAgICA1LAogICAgICAgIDYsCiAgICAgICAgNywKICAgICAgICA4LAogICAgICAgIDExCiAgICAgIF0KICAgIH0KICB9LAogICJvZmZpY2VzIjogWwogICAgewogICAgICAibmFtZSI6ICJQcmVzaWRlbnQgb2YgdGhlIFVuaXRlZCBTdGF0ZXMiLAogICAgICAiZGl2aXNpb25JZCI6ICJvY2QtZGl2aXNpb24vY291bnRyeTp1cyIsCiAgICAgICJsZXZlbHMiOiBbCiAgICAgICAgImNvdW50cnkiCiAgICAgIF0sCiAgICAgICJyb2xlcyI6IFsKICAgICAgICAiaGVhZE9mR292ZXJubWVudCIsCiAgICAgICAgImhlYWRPZlN0YXRlIgogICAgICBdLAogICAgICAib2ZmaWNpYWxJbmRpY2VzIjogWwogICAgICAgIDAKICAgICAgXQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiVmljZSBQcmVzaWRlbnQgb2YgdGhlIFVuaXRlZCBTdGF0ZXMiLAogICAgICAiZGl2aXNpb25JZCI6ICJvY2QtZGl2aXNpb24vY291bnRyeTp1cyIsCiAgICAgICJsZXZlbHMiOiBbCiAgICAgICAgImNvdW50cnkiCiAgICAgIF0sCiAgICAgICJyb2xlcyI6IFsKICAgICAgICAiZGVwdXR5SGVhZE9mR292ZXJubWVudCIKICAgICAgXSwKICAgICAgIm9mZmljaWFsSW5kaWNlcyI6IFsKICAgICAgICAxCiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogIlUuUy4gU2VuYXRvciIsCiAgICAgICJkaXZpc2lvbklkIjogIm9jZC1kaXZpc2lvbi9jb3VudHJ5OnVzL3N0YXRlOmNvIiwKICAgICAgImxldmVscyI6IFsKICAgICAgICAiY291bnRyeSIKICAgICAgXSwKICAgICAgInJvbGVzIjogWwogICAgICAgICJsZWdpc2xhdG9yVXBwZXJCb2R5IgogICAgICBdLAogICAgICAib2ZmaWNpYWxJbmRpY2VzIjogWwogICAgICAgIDIsCiAgICAgICAgMwogICAgICBdCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJVLlMuIFJlcHJlc2VudGF0aXZlIiwKICAgICAgImRpdmlzaW9uSWQiOiAib2NkLWRpdmlzaW9uL2NvdW50cnk6dXMvc3RhdGU6Y28vY2Q6MSIsCiAgICAgICJsZXZlbHMiOiBbCiAgICAgICAgImNvdW50cnkiCiAgICAgIF0sCiAgICAgICJyb2xlcyI6IFsKICAgICAgICAibGVnaXNsYXRvckxvd2VyQm9keSIKICAgICAgXSwKICAgICAgIm9mZmljaWFsSW5kaWNlcyI6IFsKICAgICAgICA0CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogIkdvdmVybm9yIG9mIENvbG9yYWRvIiwKICAgICAgImRpdmlzaW9uSWQiOiAib2NkLWRpdmlzaW9uL2NvdW50cnk6dXMvc3RhdGU6Y28iLAogICAgICAibGV2ZWxzIjogWwogICAgICAgICJhZG1pbmlzdHJhdGl2ZUFyZWExIgogICAgICBdLAogICAgICAicm9sZXMiOiBbCiAgICAgICAgImhlYWRPZkdvdmVybm1lbnQiCiAgICAgIF0sCiAgICAgICJvZmZpY2lhbEluZGljZXMiOiBbCiAgICAgICAgNQogICAgICBdCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJMaWV1dGVuYW50IEdvdmVybm9yIG9mIENvbG9yYWRvIiwKICAgICAgImRpdmlzaW9uSWQiOiAib2NkLWRpdmlzaW9uL2NvdW50cnk6dXMvc3RhdGU6Y28iLAogICAgICAibGV2ZWxzIjogWwogICAgICAgICJhZG1pbmlzdHJhdGl2ZUFyZWExIgogICAgICBdLAogICAgICAicm9sZXMiOiBbCiAgICAgICAgImRlcHV0eUhlYWRPZkdvdmVybm1lbnQiCiAgICAgIF0sCiAgICAgICJvZmZpY2lhbEluZGljZXMiOiBbCiAgICAgICAgNgogICAgICBdCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJDTyBTZWNyZXRhcnkgb2YgU3RhdGUiLAogICAgICAiZGl2aXNpb25JZCI6ICJvY2QtZGl2aXNpb24vY291bnRyeTp1cy9zdGF0ZTpjbyIsCiAgICAgICJsZXZlbHMiOiBbCiAgICAgICAgImFkbWluaXN0cmF0aXZlQXJlYTEiCiAgICAgIF0sCiAgICAgICJyb2xlcyI6IFsKICAgICAgICAiZ292ZXJubWVudE9mZmljZXIiCiAgICAgIF0sCiAgICAgICJvZmZpY2lhbEluZGljZXMiOiBbCiAgICAgICAgNwogICAgICBdCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJDTyBTdGF0ZSBUcmVhc3VyZXIiLAogICAgICAiZGl2aXNpb25JZCI6ICJvY2QtZGl2aXNpb24vY291bnRyeTp1cy9zdGF0ZTpjbyIsCiAgICAgICJsZXZlbHMiOiBbCiAgICAgICAgImFkbWluaXN0cmF0aXZlQXJlYTEiCiAgICAgIF0sCiAgICAgICJyb2xlcyI6IFsKICAgICAgICAiZ292ZXJubWVudE9mZmljZXIiCiAgICAgIF0sCiAgICAgICJvZmZpY2lhbEluZGljZXMiOiBbCiAgICAgICAgOAogICAgICBdCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJDTyBBdHRvcm5leSBHZW5lcmFsIiwKICAgICAgImRpdmlzaW9uSWQiOiAib2NkLWRpdmlzaW9uL2NvdW50cnk6dXMvc3RhdGU6Y28iLAogICAgICAibGV2ZWxzIjogWwogICAgICAgICJhZG1pbmlzdHJhdGl2ZUFyZWExIgogICAgICBdLAogICAgICAicm9sZXMiOiBbCiAgICAgICAgImdvdmVybm1lbnRPZmZpY2VyIgogICAgICBdLAogICAgICAib2ZmaWNpYWxJbmRpY2VzIjogWwogICAgICAgIDkKICAgICAgXQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiQ08gU3RhdGUgU2VuYXRvciIsCiAgICAgICJkaXZpc2lvbklkIjogIm9jZC1kaXZpc2lvbi9jb3VudHJ5OnVzL3N0YXRlOmNvL3NsZHU6MzQiLAogICAgICAibGV2ZWxzIjogWwogICAgICAgICJhZG1pbmlzdHJhdGl2ZUFyZWExIgogICAgICBdLAogICAgICAicm9sZXMiOiBbCiAgICAgICAgImxlZ2lzbGF0b3JVcHBlckJvZHkiCiAgICAgIF0sCiAgICAgICJvZmZpY2lhbEluZGljZXMiOiBbCiAgICAgICAgMTAKICAgICAgXQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiQ08gU3RhdGUgUmVwcmVzZW50YXRpdmUiLAogICAgICAiZGl2aXNpb25JZCI6ICJvY2QtZGl2aXNpb24vY291bnRyeTp1cy9zdGF0ZTpjby9zbGRsOjQiLAogICAgICAibGV2ZWxzIjogWwogICAgICAgICJhZG1pbmlzdHJhdGl2ZUFyZWExIgogICAgICBdLAogICAgICAicm9sZXMiOiBbCiAgICAgICAgImxlZ2lzbGF0b3JMb3dlckJvZHkiCiAgICAgIF0sCiAgICAgICJvZmZpY2lhbEluZGljZXMiOiBbCiAgICAgICAgMTEKICAgICAgXQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiQ08gU3VwcmVtZSBDb3VydCBKdXN0aWNlIiwKICAgICAgImRpdmlzaW9uSWQiOiAib2NkLWRpdmlzaW9uL2NvdW50cnk6dXMvc3RhdGU6Y28iLAogICAgICAibGV2ZWxzIjogWwogICAgICAgICJhZG1pbmlzdHJhdGl2ZUFyZWExIgogICAgICBdLAogICAgICAicm9sZXMiOiBbCiAgICAgICAgImp1ZGdlIgogICAgICBdLAogICAgICAib2ZmaWNpYWxJbmRpY2VzIjogWwogICAgICAgIDEyLAogICAgICAgIDEzLAogICAgICAgIDE0LAogICAgICAgIDE1LAogICAgICAgIDE2LAogICAgICAgIDE3LAogICAgICAgIDE4CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogIkNPIERpc3RyaWN0IEF0dG9ybmV5IiwKICAgICAgImRpdmlzaW9uSWQiOiAib2NkLWRpdmlzaW9uL2NvdW50cnk6dXMvc3RhdGU6Y28vZGlzdHJpY3RfY291cnQ6MiIsCiAgICAgICJsZXZlbHMiOiBbCiAgICAgICAgInJlZ2lvbmFsIgogICAgICBdLAogICAgICAicm9sZXMiOiBbCiAgICAgICAgImdvdmVybm1lbnRPZmZpY2VyIgogICAgICBdLAogICAgICAib2ZmaWNpYWxJbmRpY2VzIjogWwogICAgICAgIDE5CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogIk1heW9yIG9mIERlbnZlciIsCiAgICAgICJkaXZpc2lvbklkIjogIm9jZC1kaXZpc2lvbi9jb3VudHJ5OnVzL3N0YXRlOmNvL2NvdW50eTpkZW52ZXIiLAogICAgICAibGV2ZWxzIjogWwogICAgICAgICJhZG1pbmlzdHJhdGl2ZUFyZWEyIgogICAgICBdLAogICAgICAicm9sZXMiOiBbCiAgICAgICAgImhlYWRPZkdvdmVybm1lbnQiCiAgICAgIF0sCiAgICAgICJvZmZpY2lhbEluZGljZXMiOiBbCiAgICAgICAgMjAKICAgICAgXQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiRGVudmVyIENpdHkgQXVkaXRvciIsCiAgICAgICJkaXZpc2lvbklkIjogIm9jZC1kaXZpc2lvbi9jb3VudHJ5OnVzL3N0YXRlOmNvL2NvdW50eTpkZW52ZXIiLAogICAgICAibGV2ZWxzIjogWwogICAgICAgICJhZG1pbmlzdHJhdGl2ZUFyZWEyIgogICAgICBdLAogICAgICAicm9sZXMiOiBbCiAgICAgICAgImdvdmVybm1lbnRPZmZpY2VyIgogICAgICBdLAogICAgICAib2ZmaWNpYWxJbmRpY2VzIjogWwogICAgICAgIDIxCiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogIkRlbnZlciBDaXR5IENsZXJrIGFuZCBSZWNvcmRlciIsCiAgICAgICJkaXZpc2lvbklkIjogIm9jZC1kaXZpc2lvbi9jb3VudHJ5OnVzL3N0YXRlOmNvL2NvdW50eTpkZW52ZXIiLAogICAgICAibGV2ZWxzIjogWwogICAgICAgICJhZG1pbmlzdHJhdGl2ZUFyZWEyIgogICAgICBdLAogICAgICAicm9sZXMiOiBbCiAgICAgICAgImdvdmVybm1lbnRPZmZpY2VyIgogICAgICBdLAogICAgICAib2ZmaWNpYWxJbmRpY2VzIjogWwogICAgICAgIDIyCiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogIkRlbnZlciBDaXR5IENvdW5jaWwgTWVtYmVyIiwKICAgICAgImRpdmlzaW9uSWQiOiAib2NkLWRpdmlzaW9uL2NvdW50cnk6dXMvc3RhdGU6Y28vY291bnR5OmRlbnZlciIsCiAgICAgICJsZXZlbHMiOiBbCiAgICAgICAgImFkbWluaXN0cmF0aXZlQXJlYTIiCiAgICAgIF0sCiAgICAgICJyb2xlcyI6IFsKICAgICAgICAibGVnaXNsYXRvckxvd2VyQm9keSIKICAgICAgXSwKICAgICAgIm9mZmljaWFsSW5kaWNlcyI6IFsKICAgICAgICAyMywKICAgICAgICAyNAogICAgICBdCiAgICB9CiAgXSwKICAib2ZmaWNpYWxzIjogWwogICAgewogICAgICAibmFtZSI6ICJKb3NlcGggUi4gQmlkZW4iLAogICAgICAiYWRkcmVzcyI6IFsKICAgICAgICB7CiAgICAgICAgICAibGluZTEiOiAiMTYwMCBQZW5uc3lsdmFuaWEgQXZlbnVlIE5vcnRod2VzdCIsCiAgICAgICAgICAiY2l0eSI6ICJXYXNoaW5ndG9uIiwKICAgICAgICAgICJzdGF0ZSI6ICJEQyIsCiAgICAgICAgICAiemlwIjogIjIwNTAwIgogICAgICAgIH0KICAgICAgXSwKICAgICAgInBhcnR5IjogIkRlbW9jcmF0aWMgUGFydHkiLAogICAgICAicGhvbmVzIjogWwogICAgICAgICIoMjAyKSA0NTYtMTExMSIKICAgICAgXSwKICAgICAgInVybHMiOiBbCiAgICAgICAgImh0dHBzOi8vd3d3LndoaXRlaG91c2UuZ292LyIsCiAgICAgICAgImh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0pvZV9CaWRlbiIKICAgICAgXSwKICAgICAgImNoYW5uZWxzIjogWwogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIlR3aXR0ZXIiLAogICAgICAgICAgImlkIjogInBvdHVzIgogICAgICAgIH0KICAgICAgXSwKICAgICAgImdlb2NvZGluZ1N1bW1hcmllcyI6IFsKICAgICAgICB7CiAgICAgICAgICAicXVlcnlTdHJpbmciOiAiVGhlIFdoaXRlIEhvdXNlIDE2MDAgUGVubnN5bHZhbmlhIEF2ZW51ZSBOVyBXYXNoaW5ndG9uLCBEQyAyMDUwMCIsCiAgICAgICAgICAiZmVhdHVyZUlkIjogewogICAgICAgICAgICAiY2VsbElkIjogIjk5MjM2MDIzMjU3OTU1Mjc0NDkiLAogICAgICAgICAgICAiZnByaW50IjogIjExNTEzMzgxMDIyMDIyMzQ0MTExIgogICAgICAgICAgfSwKICAgICAgICAgICJmZWF0dXJlVHlwZSI6ICJ0eXBlQ29tcG91bmRCdWlsZGluZyIsCiAgICAgICAgICAicG9zaXRpb25QcmVjaXNpb25NZXRlcnMiOiAxMjYuMTQ1NDU0OTQzNDcwOTIsCiAgICAgICAgICAiYWRkcmVzc1VuZGVyc3Rvb2QiOiB0cnVlCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJLYW1hbGEgRC4gSGFycmlzIiwKICAgICAgImFkZHJlc3MiOiBbCiAgICAgICAgewogICAgICAgICAgImxpbmUxIjogIjE2MDAgUGVubnN5bHZhbmlhIEF2ZW51ZSBOb3J0aHdlc3QiLAogICAgICAgICAgImNpdHkiOiAiV2FzaGluZ3RvbiIsCiAgICAgICAgICAic3RhdGUiOiAiREMiLAogICAgICAgICAgInppcCI6ICIyMDUwMCIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJwYXJ0eSI6ICJEZW1vY3JhdGljIFBhcnR5IiwKICAgICAgInBob25lcyI6IFsKICAgICAgICAiKDIwMikgNDU2LTExMTEiCiAgICAgIF0sCiAgICAgICJ1cmxzIjogWwogICAgICAgICJodHRwczovL3d3dy53aGl0ZWhvdXNlLmdvdi8iLAogICAgICAgICJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9LYW1hbGFfSGFycmlzIgogICAgICBdLAogICAgICAiY2hhbm5lbHMiOiBbCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAiVHdpdHRlciIsCiAgICAgICAgICAiaWQiOiAiVlAiCiAgICAgICAgfQogICAgICBdLAogICAgICAiZ2VvY29kaW5nU3VtbWFyaWVzIjogWwogICAgICAgIHsKICAgICAgICAgICJxdWVyeVN0cmluZyI6ICJUaGUgV2hpdGUgSG91c2UgMTYwMCBQZW5uc3lsdmFuaWEgQXZlbnVlIE5XIFdhc2hpbmd0b24sIERDIDIwNTAwIiwKICAgICAgICAgICJmZWF0dXJlSWQiOiB7CiAgICAgICAgICAgICJjZWxsSWQiOiAiOTkyMzYwMjMyNTc5NTUyNzQ0OSIsCiAgICAgICAgICAgICJmcHJpbnQiOiAiMTE1MTMzODEwMjIwMjIzNDQxMTEiCiAgICAgICAgICB9LAogICAgICAgICAgImZlYXR1cmVUeXBlIjogInR5cGVDb21wb3VuZEJ1aWxkaW5nIiwKICAgICAgICAgICJwb3NpdGlvblByZWNpc2lvbk1ldGVycyI6IDEyNi4xNDU0NTQ5NDM0NzA5MiwKICAgICAgICAgICJhZGRyZXNzVW5kZXJzdG9vZCI6IHRydWUKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogIkpvaG4gVy4gSGlja2VubG9vcGVyIiwKICAgICAgImFkZHJlc3MiOiBbCiAgICAgICAgewogICAgICAgICAgImxpbmUxIjogIkI4NSIsCiAgICAgICAgICAiY2l0eSI6ICJXYXNoaW5ndG9uIiwKICAgICAgICAgICJzdGF0ZSI6ICJEQyIsCiAgICAgICAgICAiemlwIjogIjIwNTEwIgogICAgICAgIH0KICAgICAgXSwKICAgICAgInBhcnR5IjogIkRlbW9jcmF0aWMgUGFydHkiLAogICAgICAicGhvbmVzIjogWwogICAgICAgICIoMjAyKSAyMjQtNTk0MSIKICAgICAgXSwKICAgICAgInVybHMiOiBbCiAgICAgICAgImh0dHBzOi8vd3d3LmhpY2tlbmxvb3Blci5zZW5hdGUuZ292LyIsCiAgICAgICAgImh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0pvaG5fSGlja2VubG9vcGVyIgogICAgICBdLAogICAgICAicGhvdG9VcmwiOiAiaHR0cDovL3d3dy5jb2xvcmFkby5nb3YvY21zL2dvdmVybm9yL2dvdmVybm9yLW1haW4vaW1hZ2VzL0dvdmVybm9ySGlja2VubG9vcGVySW5CbHVlU2hpcnQuanBnIiwKICAgICAgImNoYW5uZWxzIjogWwogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIlR3aXR0ZXIiLAogICAgICAgICAgImlkIjogIlNlbmF0b3JIaWNrIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAiRmFjZWJvb2siLAogICAgICAgICAgImlkIjogIkpvaG5IaWNrZW5sb29wZXIiCiAgICAgICAgfQogICAgICBdLAogICAgICAiZ2VvY29kaW5nU3VtbWFyaWVzIjogWwogICAgICAgIHsKICAgICAgICAgICJxdWVyeVN0cmluZyI6ICJCODUgUnVzc2VsbCBTZW5hdGUgT2ZmaWNlIEJ1aWxkaW5nIFdhc2hpbmd0b24gREMgMjA1MTAiLAogICAgICAgICAgImZlYXR1cmVJZCI6IHsKICAgICAgICAgICAgImNlbGxJZCI6ICI5OTIzNjAyNzc3OTgzMDkzMDM1IiwKICAgICAgICAgICAgImZwcmludCI6ICIxNjc1NDQzNTgwNDI0MDE0OTU1MCIKICAgICAgICAgIH0sCiAgICAgICAgICAiZmVhdHVyZVR5cGUiOiAidHlwZUNvbXBvdW5kQnVpbGRpbmciLAogICAgICAgICAgInBvc2l0aW9uUHJlY2lzaW9uTWV0ZXJzIjogMTU0Ljk5NzY3MTMzNzkwOTI1LAogICAgICAgICAgImFkZHJlc3NVbmRlcnN0b29kIjogZmFsc2UKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogIk1pY2hhZWwgRi4gQmVubmV0IiwKICAgICAgImFkZHJlc3MiOiBbCiAgICAgICAgewogICAgICAgICAgImxpbmUxIjogIjI2MSBSdXNzZWxsIFNlbmF0ZSBPZmZpY2UgQnVpbGRpbmciLAogICAgICAgICAgImNpdHkiOiAiV2FzaGluZ3RvbiIsCiAgICAgICAgICAic3RhdGUiOiAiREMiLAogICAgICAgICAgInppcCI6ICIyMDUxMCIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJwYXJ0eSI6ICJEZW1vY3JhdGljIFBhcnR5IiwKICAgICAgInBob25lcyI6IFsKICAgICAgICAiKDIwMikgMjI0LTU4NTIiCiAgICAgIF0sCiAgICAgICJ1cmxzIjogWwogICAgICAgICJodHRwczovL3d3dy5iZW5uZXQuc2VuYXRlLmdvdi8iLAogICAgICAgICJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9NaWNoYWVsX0Jlbm5ldCIKICAgICAgXSwKICAgICAgInBob3RvVXJsIjogImh0dHA6Ly9iaW9ndWlkZS5jb25ncmVzcy5nb3YvYmlvZ3VpZGUvcGhvdG8vQi9CMDAxMjY3LmpwZyIsCiAgICAgICJjaGFubmVscyI6IFsKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJGYWNlYm9vayIsCiAgICAgICAgICAiaWQiOiAic2VuYmVubmV0Y28iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJUd2l0dGVyIiwKICAgICAgICAgICJpZCI6ICJTZW5hdG9yQmVubmV0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAiWW91VHViZSIsCiAgICAgICAgICAiaWQiOiAiU2VuYXRvckJlbm5ldCIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJnZW9jb2RpbmdTdW1tYXJpZXMiOiBbCiAgICAgICAgewogICAgICAgICAgInF1ZXJ5U3RyaW5nIjogIjI2MSBSdXNzZWxsIFNlbmF0ZSBPZmZpY2UgQnVpbGRpbmcsIFdhc2hpbmd0b24gREMgMjA1MTAiLAogICAgICAgICAgImZlYXR1cmVJZCI6IHsKICAgICAgICAgICAgImNlbGxJZCI6ICI5OTIzNjAyNzc3OTgzMDkzMDM1IiwKICAgICAgICAgICAgImZwcmludCI6ICIxNjc1NDQzNTgwNDI0MDE0OTU1MCIKICAgICAgICAgIH0sCiAgICAgICAgICAiZmVhdHVyZVR5cGUiOiAidHlwZUNvbXBvdW5kQnVpbGRpbmciLAogICAgICAgICAgInBvc2l0aW9uUHJlY2lzaW9uTWV0ZXJzIjogMTU0Ljk5NzY3MTMzNzkwOTI1LAogICAgICAgICAgImFkZHJlc3NVbmRlcnN0b29kIjogZmFsc2UKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogIkRpYW5hIERlR2V0dGUiLAogICAgICAiYWRkcmVzcyI6IFsKICAgICAgICB7CiAgICAgICAgICAibGluZTEiOiAiMjExMSBSYXlidXJuIEhvdXNlIE9mZmljZSBCdWlsZGluZyIsCiAgICAgICAgICAiY2l0eSI6ICJXYXNoaW5ndG9uIiwKICAgICAgICAgICJzdGF0ZSI6ICJEQyIsCiAgICAgICAgICAiemlwIjogIjIwNTE1IgogICAgICAgIH0KICAgICAgXSwKICAgICAgInBhcnR5IjogIkRlbW9jcmF0aWMgUGFydHkiLAogICAgICAicGhvbmVzIjogWwogICAgICAgICIoMjAyKSAyMjUtNDQzMSIKICAgICAgXSwKICAgICAgInVybHMiOiBbCiAgICAgICAgImh0dHBzOi8vZGVnZXR0ZS5ob3VzZS5nb3YvIiwKICAgICAgICAiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRGlhbmFfRGVHZXR0ZSIKICAgICAgXSwKICAgICAgInBob3RvVXJsIjogImh0dHA6Ly9kZWdldHRlLmhvdXNlLmdvdi9zaXRlcy9kZWdldHRlLmhvdXNlLmdvdi9maWxlcy9zdHlsZXMvY29uZ3Jlc3NfaW1hZ2VfbWVkaXVtL3B1YmxpYy93eXNpd3lnX3VwbG9hZGVkL0RMRCUyMEhpZ2glMjBSZXMlMjA1eDdfMS5KUEc/aXRvaz1DdUlrREllQiIsCiAgICAgICJjaGFubmVscyI6IFsKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJGYWNlYm9vayIsCiAgICAgICAgICAiaWQiOiAiRGlhbmFEZUdldHRlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAiVHdpdHRlciIsCiAgICAgICAgICAiaWQiOiAiUmVwRGlhbmFEZUdldHRlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAiWW91VHViZSIsCiAgICAgICAgICAiaWQiOiAiUmVwRGlhbmFEZUdldHRlIgogICAgICAgIH0KICAgICAgXSwKICAgICAgImdlb2NvZGluZ1N1bW1hcmllcyI6IFsKICAgICAgICB7CiAgICAgICAgICAicXVlcnlTdHJpbmciOiAiMjExMSBSYXlidXJuIEhvdXNlIE9mZmljZSBCdWlsZGluZywgV2FzaGluZ3RvbiwgREMgMjA1MTUtMDYwMSIsCiAgICAgICAgICAiZmVhdHVyZUlkIjogewogICAgICAgICAgICAiY2VsbElkIjogIjk5MjM2MDIwNjcwMzI1NjExMDciLAogICAgICAgICAgICAiZnByaW50IjogIjMwMDQyODE0NjEzNDE2NDY0NDgiCiAgICAgICAgICB9LAogICAgICAgICAgImZlYXR1cmVUeXBlIjogInR5cGVDb21wb3VuZEJ1aWxkaW5nIiwKICAgICAgICAgICJwb3NpdGlvblByZWNpc2lvbk1ldGVycyI6IDE2Mi4xOTY2OTI1OTU3MDM1MiwKICAgICAgICAgICJhZGRyZXNzVW5kZXJzdG9vZCI6IGZhbHNlCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJKYXJlZCBQb2xpcyIsCiAgICAgICJhZGRyZXNzIjogWwogICAgICAgIHsKICAgICAgICAgICJsaW5lMSI6ICIyMDAgRWFzdCBDb2xmYXggQXZlbnVlIiwKICAgICAgICAgICJjaXR5IjogIkRlbnZlciIsCiAgICAgICAgICAic3RhdGUiOiAiQ08iLAogICAgICAgICAgInppcCI6ICI4MDIwMyIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJwYXJ0eSI6ICJEZW1vY3JhdGljIFBhcnR5IiwKICAgICAgInBob25lcyI6IFsKICAgICAgICAiKDMwMykgODY2LTI0NzEiCiAgICAgIF0sCiAgICAgICJ1cmxzIjogWwogICAgICAgICJodHRwczovL3d3dy5jb2xvcmFkby5nb3YvZ292ZXJub3IvIiwKICAgICAgICAiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSmFyZWRfUG9saXMiCiAgICAgIF0sCiAgICAgICJlbWFpbHMiOiBbCiAgICAgICAgImdvdmVybm9ycG9saXNAc3RhdGUuY28udXMiCiAgICAgIF0sCiAgICAgICJjaGFubmVscyI6IFsKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJGYWNlYm9vayIsCiAgICAgICAgICAiaWQiOiAiamFyZWRwb2xpcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIlR3aXR0ZXIiLAogICAgICAgICAgImlkIjogImphcmVkcG9saXMiCiAgICAgICAgfQogICAgICBdLAogICAgICAiZ2VvY29kaW5nU3VtbWFyaWVzIjogWwogICAgICAgIHsKICAgICAgICAgICJxdWVyeVN0cmluZyI6ICIyMDAgRSBDb2xmYXggQXZlLCBSbSAxMzYsIERlbnZlciwgQ08gODAyMDMiLAogICAgICAgICAgImZlYXR1cmVJZCI6IHsKICAgICAgICAgICAgImNlbGxJZCI6ICI5NzU4MzA3NzE2NDI0NDY2MDg1IiwKICAgICAgICAgICAgImZwcmludCI6ICIxMjMyMzEzODIzODAyMTA1ODcxIgogICAgICAgICAgfSwKICAgICAgICAgICJmZWF0dXJlVHlwZSI6ICJ0eXBlQ29tcG91bmRTZWN0aW9uIiwKICAgICAgICAgICJwb3NpdGlvblByZWNpc2lvbk1ldGVycyI6IDAsCiAgICAgICAgICAiYWRkcmVzc1VuZGVyc3Rvb2QiOiB0cnVlCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJEaWFubmUgUHJpbWF2ZXJhIiwKICAgICAgImFkZHJlc3MiOiBbCiAgICAgICAgewogICAgICAgICAgImxpbmUxIjogIjIwMCBFYXN0IENvbGZheCBBdmVudWUiLAogICAgICAgICAgImNpdHkiOiAiRGVudmVyIiwKICAgICAgICAgICJzdGF0ZSI6ICJDTyIsCiAgICAgICAgICAiemlwIjogIjgwMjAzIgogICAgICAgIH0KICAgICAgXSwKICAgICAgInBhcnR5IjogIkRlbW9jcmF0aWMgUGFydHkiLAogICAgICAicGhvbmVzIjogWwogICAgICAgICIoMzAzKSA4NjYtNDA3NSIKICAgICAgXSwKICAgICAgInVybHMiOiBbCiAgICAgICAgImh0dHBzOi8vbHRnb3Zlcm5vci5jb2xvcmFkby5nb3YvIiwKICAgICAgICAiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRGlhbm5lX1ByaW1hdmVyYSIKICAgICAgXSwKICAgICAgImNoYW5uZWxzIjogWwogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIkZhY2Vib29rIiwKICAgICAgICAgICJpZCI6ICJMdEdvdm9mQ08iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJUd2l0dGVyIiwKICAgICAgICAgICJpZCI6ICJMdEdvdm9mQ08iCiAgICAgICAgfQogICAgICBdLAogICAgICAiZ2VvY29kaW5nU3VtbWFyaWVzIjogWwogICAgICAgIHsKICAgICAgICAgICJxdWVyeVN0cmluZyI6ICIyMDAgRSBDb2xmYXggQXZlLCBSbSAxMzAsIERlbnZlciwgQ08gODAyMDMiLAogICAgICAgICAgImZlYXR1cmVJZCI6IHsKICAgICAgICAgICAgImNlbGxJZCI6ICI5NzU4MzA3NzE2NDI0NDY2MDg1IiwKICAgICAgICAgICAgImZwcmludCI6ICIxODE3OTg4NjcxMjcxODg4MjQ0NiIKICAgICAgICAgIH0sCiAgICAgICAgICAiZmVhdHVyZVR5cGUiOiAidHlwZUNvbXBvdW5kU2VjdGlvbiIsCiAgICAgICAgICAicG9zaXRpb25QcmVjaXNpb25NZXRlcnMiOiAwLAogICAgICAgICAgImFkZHJlc3NVbmRlcnN0b29kIjogdHJ1ZQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiSmVuYSBHcmlzd29sZCIsCiAgICAgICJhZGRyZXNzIjogWwogICAgICAgIHsKICAgICAgICAgICJsaW5lMSI6ICIxNzAwIEJyb2Fkd2F5IiwKICAgICAgICAgICJjaXR5IjogIkRlbnZlciIsCiAgICAgICAgICAic3RhdGUiOiAiQ08iLAogICAgICAgICAgInppcCI6ICI4MDI5MCIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJwYXJ0eSI6ICJEZW1vY3JhdGljIFBhcnR5IiwKICAgICAgInBob25lcyI6IFsKICAgICAgICAiKDMwMykgODk0LTIyMDAiCiAgICAgIF0sCiAgICAgICJ1cmxzIjogWwogICAgICAgICJodHRwczovL3d3dy5zb3Muc3RhdGUuY28udXMvIiwKICAgICAgICAiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSmVuYV9Hcmlzd29sZCIKICAgICAgXSwKICAgICAgImNoYW5uZWxzIjogWwogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIlR3aXR0ZXIiLAogICAgICAgICAgImlkIjogIkplbmFHcmlzd29sZCIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJnZW9jb2RpbmdTdW1tYXJpZXMiOiBbCiAgICAgICAgewogICAgICAgICAgInF1ZXJ5U3RyaW5nIjogIjE3MDAgQnJvYWR3YXksIFN1aXRlIDIwMCwgRGVudmVyLCBDTyA4MDI5MCIsCiAgICAgICAgICAiZmVhdHVyZUlkIjogewogICAgICAgICAgICAiY2VsbElkIjogIjk3NTgzMDczNTMzMzczNTAxMjciLAogICAgICAgICAgICAiZnByaW50IjogIjg0MjI1MDExNDMyNTQzNDEzODUiCiAgICAgICAgICB9LAogICAgICAgICAgImZlYXR1cmVUeXBlIjogInR5cGVDb21wb3VuZFNlY3Rpb24iLAogICAgICAgICAgInBvc2l0aW9uUHJlY2lzaW9uTWV0ZXJzIjogMCwKICAgICAgICAgICJhZGRyZXNzVW5kZXJzdG9vZCI6IHRydWUKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogIkRhdmUgWW91bmciLAogICAgICAiYWRkcmVzcyI6IFsKICAgICAgICB7CiAgICAgICAgICAibGluZTEiOiAiMjAwIEVhc3QgQ29sZmF4IEF2ZW51ZSIsCiAgICAgICAgICAiY2l0eSI6ICJEZW52ZXIiLAogICAgICAgICAgInN0YXRlIjogIkNPIiwKICAgICAgICAgICJ6aXAiOiAiODAyMDMiCiAgICAgICAgfQogICAgICBdLAogICAgICAicGFydHkiOiAiRGVtb2NyYXRpYyBQYXJ0eSIsCiAgICAgICJwaG9uZXMiOiBbCiAgICAgICAgIigzMDMpIDg2Ni0yNDQxIgogICAgICBdLAogICAgICAidXJscyI6IFsKICAgICAgICAiaHR0cHM6Ly90cmVhc3VyeS5jb2xvcmFkby5nb3YvIiwKICAgICAgICAiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRGF2ZV9Zb3VuZ18lMjhDb2xvcmFkb19wb2xpdGljaWFuJTI5IgogICAgICBdLAogICAgICAiZW1haWxzIjogWwogICAgICAgICJ0cmVhc3VyZXIueW91bmdAc3RhdGUuY28udXMiCiAgICAgIF0sCiAgICAgICJjaGFubmVscyI6IFsKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJUd2l0dGVyIiwKICAgICAgICAgICJpZCI6ICJjb2xvdHJlYXN1cmVyIgogICAgICAgIH0KICAgICAgXSwKICAgICAgImdlb2NvZGluZ1N1bW1hcmllcyI6IFsKICAgICAgICB7CiAgICAgICAgICAicXVlcnlTdHJpbmciOiAiMjAwIEVhc3QgQ29sZmF4IEF2ZW51ZSwgU3VpdGUgMTQwLCBEZW52ZXIsIENPIDgwMjAzLTE3MjIiLAogICAgICAgICAgImZlYXR1cmVJZCI6IHsKICAgICAgICAgICAgImNlbGxJZCI6ICI5NzU4MzA3NzE3MDM2ODkyMDUzIiwKICAgICAgICAgICAgImZwcmludCI6ICIxNzEwODczNTk1NTEwNzczNjE5NCIKICAgICAgICAgIH0sCiAgICAgICAgICAiZmVhdHVyZVR5cGUiOiAidHlwZUNvbXBvdW5kU2VjdGlvbiIsCiAgICAgICAgICAicG9zaXRpb25QcmVjaXNpb25NZXRlcnMiOiAwLAogICAgICAgICAgImFkZHJlc3NVbmRlcnN0b29kIjogdHJ1ZQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiUGhpbCBXZWlzZXIiLAogICAgICAiYWRkcmVzcyI6IFsKICAgICAgICB7CiAgICAgICAgICAibGluZTEiOiAiMTMwMCBCcm9hZHdheSAxMHRoIEZsb29yIiwKICAgICAgICAgICJjaXR5IjogIkRlbnZlciIsCiAgICAgICAgICAic3RhdGUiOiAiQ08iLAogICAgICAgICAgInppcCI6ICI4MDIwMyIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJwYXJ0eSI6ICJEZW1vY3JhdGljIFBhcnR5IiwKICAgICAgInBob25lcyI6IFsKICAgICAgICAiKDcyMCkgNTA4LTYwMDAiCiAgICAgIF0sCiAgICAgICJ1cmxzIjogWwogICAgICAgICJodHRwczovL2NvYWcuZ292LyIsCiAgICAgICAgImh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1BoaWxfV2Vpc2VyIgogICAgICBdLAogICAgICAiZ2VvY29kaW5nU3VtbWFyaWVzIjogWwogICAgICAgIHsKICAgICAgICAgICJxdWVyeVN0cmluZyI6ICIxMzAwIEJyb2Fkd2F5LCAxMHRoIEZsb29yLCBEZW52ZXIsIENPIDgwMjAzIiwKICAgICAgICAgICJmZWF0dXJlSWQiOiB7CiAgICAgICAgICAgICJjZWxsSWQiOiAiOTc1ODMxNDMxNDE2NjMxNjg4OSIsCiAgICAgICAgICAgICJmcHJpbnQiOiAiMTMyMjg3NjI3MjM3NjkwMzg1NjMiCiAgICAgICAgICB9LAogICAgICAgICAgImZlYXR1cmVUeXBlIjogInR5cGVDb21wb3VuZFNlY3Rpb24iLAogICAgICAgICAgInBvc2l0aW9uUHJlY2lzaW9uTWV0ZXJzIjogMCwKICAgICAgICAgICJhZGRyZXNzVW5kZXJzdG9vZCI6IGZhbHNlCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJKdWxpZSBHb256YWxlcyIsCiAgICAgICJhZGRyZXNzIjogWwogICAgICAgIHsKICAgICAgICAgICJsaW5lMSI6ICIyMDAgRWFzdCBDb2xmYXggQXZlbnVlIiwKICAgICAgICAgICJjaXR5IjogIkRlbnZlciIsCiAgICAgICAgICAic3RhdGUiOiAiQ08iLAogICAgICAgICAgInppcCI6ICI4MDIwMyIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJwYXJ0eSI6ICJEZW1vY3JhdGljIFBhcnR5IiwKICAgICAgInBob25lcyI6IFsKICAgICAgICAiKDMwMykgODY2LTQ4NjIiCiAgICAgIF0sCiAgICAgICJ1cmxzIjogWwogICAgICAgICJodHRwczovL2xlZy5jb2xvcmFkby5nb3YvbGVnaXNsYXRvcnMvanVsaWUtZ29uemFsZXMiLAogICAgICAgICJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9KdWxpZV9Hb256YWxlcyIKICAgICAgXSwKICAgICAgImVtYWlscyI6IFsKICAgICAgICAianVsaWUuZ29uemFsZXMuc2VuYXRlQHN0YXRlLmNvLnVzIgogICAgICBdLAogICAgICAiY2hhbm5lbHMiOiBbCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAiRmFjZWJvb2siLAogICAgICAgICAgImlkIjogInNlbmFkb3JhanVsaWUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJUd2l0dGVyIiwKICAgICAgICAgICJpZCI6ICJTZW5hZG9yYUp1bGllIgogICAgICAgIH0KICAgICAgXSwKICAgICAgImdlb2NvZGluZ1N1bW1hcmllcyI6IFsKICAgICAgICB7CiAgICAgICAgICAicXVlcnlTdHJpbmciOiAiMjAwIEUgQ09MRkFYIEFWRSBTVEUgMzQ2LCBERU5WRVIgQ08gODAyMDMiLAogICAgICAgICAgImZlYXR1cmVJZCI6IHsKICAgICAgICAgICAgImNlbGxJZCI6ICI5NzU4MzA3NzE3MDU1NDk5OTM1IiwKICAgICAgICAgICAgImZwcmludCI6ICIxNzMxMTE1OTg3MjU4NDAyNTEyMCIKICAgICAgICAgIH0sCiAgICAgICAgICAiZmVhdHVyZVR5cGUiOiAidHlwZUNvbXBvdW5kU2VjdGlvbiIsCiAgICAgICAgICAicG9zaXRpb25QcmVjaXNpb25NZXRlcnMiOiAwLAogICAgICAgICAgImFkZHJlc3NVbmRlcnN0b29kIjogdHJ1ZQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiU2VyZW5hIEdvbnphbGVzLUd1dGllcnJleiIsCiAgICAgICJhZGRyZXNzIjogWwogICAgICAgIHsKICAgICAgICAgICJsaW5lMSI6ICIyMDAgRWFzdCBDb2xmYXggQXZlbnVlIiwKICAgICAgICAgICJjaXR5IjogIkRlbnZlciIsCiAgICAgICAgICAic3RhdGUiOiAiQ08iLAogICAgICAgICAgInppcCI6ICI4MDIwMyIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJwYXJ0eSI6ICJEZW1vY3JhdGljIFBhcnR5IiwKICAgICAgInBob25lcyI6IFsKICAgICAgICAiKDMwMykgODY2LTI5NTQiCiAgICAgIF0sCiAgICAgICJ1cmxzIjogWwogICAgICAgICJodHRwczovL2xlZy5jb2xvcmFkby5nb3YvbGVnaXNsYXRvcnMvc2VyZW5hLWdvbnphbGVzLWd1dGllcnJleiIsCiAgICAgICAgImh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1NlcmVuYV9Hb256YWxlcy1HdXRpZXJyZXoiCiAgICAgIF0sCiAgICAgICJlbWFpbHMiOiBbCiAgICAgICAgInNlcmVuYS5nb256YWxlcy1ndXRpZXJyZXouaG91c2VAc3RhdGUuY28udXMiCiAgICAgIF0sCiAgICAgICJjaGFubmVscyI6IFsKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJGYWNlYm9vayIsCiAgICAgICAgICAiaWQiOiAiU2VyZW5hZm9yQ08iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJUd2l0dGVyIiwKICAgICAgICAgICJpZCI6ICJTZXJlbmFGb3JDTyIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJnZW9jb2RpbmdTdW1tYXJpZXMiOiBbCiAgICAgICAgewogICAgICAgICAgInF1ZXJ5U3RyaW5nIjogIjIwMCBFIENPTEZBWCBBVkUgU1RFIDMwNywgREVOVkVSIENPIDgwMjAzIiwKICAgICAgICAgICJmZWF0dXJlSWQiOiB7CiAgICAgICAgICAgICJjZWxsSWQiOiAiOTc1ODMwNzcxNzA1NTQ5OTkzNSIsCiAgICAgICAgICAgICJmcHJpbnQiOiAiNzQzMDkxNjUwODUwOTg1MzQ1OSIKICAgICAgICAgIH0sCiAgICAgICAgICAiZmVhdHVyZVR5cGUiOiAidHlwZUNvbXBvdW5kU2VjdGlvbiIsCiAgICAgICAgICAicG9zaXRpb25QcmVjaXNpb25NZXRlcnMiOiAwLAogICAgICAgICAgImFkZHJlc3NVbmRlcnN0b29kIjogdHJ1ZQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiQnJpYW4gRC4gQm9hdHJpZ2h0IiwKICAgICAgImFkZHJlc3MiOiBbCiAgICAgICAgewogICAgICAgICAgImxpbmUxIjogIjIgRWFzdCAxNHRoIEF2ZW51ZSIsCiAgICAgICAgICAiY2l0eSI6ICJEZW52ZXIiLAogICAgICAgICAgInN0YXRlIjogIkNPIiwKICAgICAgICAgICJ6aXAiOiAiODAyMDMiCiAgICAgICAgfQogICAgICBdLAogICAgICAicGFydHkiOiAiTm9ucGFydGlzYW4iLAogICAgICAicGhvbmVzIjogWwogICAgICAgICIoNzIwKSA2MjUtNTQxMCIKICAgICAgXSwKICAgICAgInVybHMiOiBbCiAgICAgICAgImh0dHBzOi8vd3d3LmNvdXJ0cy5zdGF0ZS5jby51cy9Db3VydHMvU3VwcmVtZV9Db3VydC8iLAogICAgICAgICJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Ccmlhbl9Cb2F0cmlnaHQiCiAgICAgIF0sCiAgICAgICJnZW9jb2RpbmdTdW1tYXJpZXMiOiBbCiAgICAgICAgewogICAgICAgICAgInF1ZXJ5U3RyaW5nIjogIjIgRS4gMTR0aCBBdmVudWUsIERlbnZlciwgQ08gODAyMDMiLAogICAgICAgICAgImZlYXR1cmVJZCI6IHsKICAgICAgICAgICAgImNlbGxJZCI6ICI5NzU4MzE0MzE0MTY4MjU5Mjk3IiwKICAgICAgICAgICAgImZwcmludCI6ICIxNjY2MTMxNjcwMTQxMDA5MTIwMiIKICAgICAgICAgIH0sCiAgICAgICAgICAiZmVhdHVyZVR5cGUiOiAidHlwZUNvbXBvdW5kQnVpbGRpbmciLAogICAgICAgICAgInBvc2l0aW9uUHJlY2lzaW9uTWV0ZXJzIjogNDkuODQ3NDQ5MjcyNzI0MzI2LAogICAgICAgICAgImFkZHJlc3NVbmRlcnN0b29kIjogdHJ1ZQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiQ2FybG9zIEEuIFNhbW91ciwgSnIuIiwKICAgICAgImFkZHJlc3MiOiBbCiAgICAgICAgewogICAgICAgICAgImxpbmUxIjogIjIgRWFzdCAxNHRoIEF2ZW51ZSIsCiAgICAgICAgICAiY2l0eSI6ICJEZW52ZXIiLAogICAgICAgICAgInN0YXRlIjogIkNPIiwKICAgICAgICAgICJ6aXAiOiAiODAyMDMiCiAgICAgICAgfQogICAgICBdLAogICAgICAicGFydHkiOiAiTm9ucGFydGlzYW4iLAogICAgICAicGhvbmVzIjogWwogICAgICAgICIoNzIwKSA2MjUtNTQ2MCIKICAgICAgXSwKICAgICAgInVybHMiOiBbCiAgICAgICAgImh0dHBzOi8vd3d3LmNvdXJ0cy5zdGF0ZS5jby51cy9Db3VydHMvU3VwcmVtZV9Db3VydC8iLAogICAgICAgICJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9DYXJsb3NfU2Ftb3VyIgogICAgICBdLAogICAgICAiZ2VvY29kaW5nU3VtbWFyaWVzIjogWwogICAgICAgIHsKICAgICAgICAgICJxdWVyeVN0cmluZyI6ICIyIEUuIDE0dGggQXZlbnVlLCBEZW52ZXIsIENPIDgwMjAzIiwKICAgICAgICAgICJmZWF0dXJlSWQiOiB7CiAgICAgICAgICAgICJjZWxsSWQiOiAiOTc1ODMxNDMxNDE2ODI1OTI5NyIsCiAgICAgICAgICAgICJmcHJpbnQiOiAiMTY2NjEzMTY3MDE0MTAwOTEyMDIiCiAgICAgICAgICB9LAogICAgICAgICAgImZlYXR1cmVUeXBlIjogInR5cGVDb21wb3VuZEJ1aWxkaW5nIiwKICAgICAgICAgICJwb3NpdGlvblByZWNpc2lvbk1ldGVycyI6IDQ5Ljg0NzQ0OTI3MjcyNDMyNiwKICAgICAgICAgICJhZGRyZXNzVW5kZXJzdG9vZCI6IHRydWUKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogIk1hcmlhIEUuIEJlcmtlbmtvdHRlciIsCiAgICAgICJhZGRyZXNzIjogWwogICAgICAgIHsKICAgICAgICAgICJsaW5lMSI6ICIyIEVhc3QgMTR0aCBBdmVudWUiLAogICAgICAgICAgImNpdHkiOiAiRGVudmVyIiwKICAgICAgICAgICJzdGF0ZSI6ICJDTyIsCiAgICAgICAgICAiemlwIjogIjgwMjAzIgogICAgICAgIH0KICAgICAgXSwKICAgICAgInBhcnR5IjogIk5vbnBhcnRpc2FuIiwKICAgICAgInBob25lcyI6IFsKICAgICAgICAiKDcyMCkgNjI1LTU0MjAiCiAgICAgIF0sCiAgICAgICJ1cmxzIjogWwogICAgICAgICJodHRwczovL3d3dy5jb3VydHMuc3RhdGUuY28udXMvQ291cnRzL1N1cHJlbWVfQ291cnQvIiwKICAgICAgICAiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTWFyaWFfQmVya2Vua290dGVyIgogICAgICBdLAogICAgICAiZ2VvY29kaW5nU3VtbWFyaWVzIjogWwogICAgICAgIHsKICAgICAgICAgICJxdWVyeVN0cmluZyI6ICIyIEUuIDE0dGggQXZlbnVlLCBEZW52ZXIsIENPIDgwMjAzIiwKICAgICAgICAgICJmZWF0dXJlSWQiOiB7CiAgICAgICAgICAgICJjZWxsSWQiOiAiOTc1ODMxNDMxNDE2ODI1OTI5NyIsCiAgICAgICAgICAgICJmcHJpbnQiOiAiMTY2NjEzMTY3MDE0MTAwOTEyMDIiCiAgICAgICAgICB9LAogICAgICAgICAgImZlYXR1cmVUeXBlIjogInR5cGVDb21wb3VuZEJ1aWxkaW5nIiwKICAgICAgICAgICJwb3NpdGlvblByZWNpc2lvbk1ldGVycyI6IDQ5Ljg0NzQ0OTI3MjcyNDMyNiwKICAgICAgICAgICJhZGRyZXNzVW5kZXJzdG9vZCI6IHRydWUKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogIk1lbGlzc2EgSGFydCIsCiAgICAgICJhZGRyZXNzIjogWwogICAgICAgIHsKICAgICAgICAgICJsaW5lMSI6ICIyIEVhc3QgMTR0aCBBdmVudWUiLAogICAgICAgICAgImNpdHkiOiAiRGVudmVyIiwKICAgICAgICAgICJzdGF0ZSI6ICJDTyIsCiAgICAgICAgICAiemlwIjogIjgwMjAzIgogICAgICAgIH0KICAgICAgXSwKICAgICAgInBhcnR5IjogIk5vbnBhcnRpc2FuIiwKICAgICAgInBob25lcyI6IFsKICAgICAgICAiKDcyMCkgNjI1LTU0MzAiCiAgICAgIF0sCiAgICAgICJ1cmxzIjogWwogICAgICAgICJodHRwczovL3d3dy5jb3VydHMuc3RhdGUuY28udXMvQ291cnRzL1N1cHJlbWVfQ291cnQvIiwKICAgICAgICAiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTWVsaXNzYV9IYXJ0XyUyOGp1ZGdlJTI5IgogICAgICBdLAogICAgICAiZ2VvY29kaW5nU3VtbWFyaWVzIjogWwogICAgICAgIHsKICAgICAgICAgICJxdWVyeVN0cmluZyI6ICIyIEUuIDE0dGggQXZlbnVlLCBEZW52ZXIsIENPIDgwMjAzIiwKICAgICAgICAgICJmZWF0dXJlSWQiOiB7CiAgICAgICAgICAgICJjZWxsSWQiOiAiOTc1ODMxNDMxNDE2ODI1OTI5NyIsCiAgICAgICAgICAgICJmcHJpbnQiOiAiMTY2NjEzMTY3MDE0MTAwOTEyMDIiCiAgICAgICAgICB9LAogICAgICAgICAgImZlYXR1cmVUeXBlIjogInR5cGVDb21wb3VuZEJ1aWxkaW5nIiwKICAgICAgICAgICJwb3NpdGlvblByZWNpc2lvbk1ldGVycyI6IDQ5Ljg0NzQ0OTI3MjcyNDMyNiwKICAgICAgICAgICJhZGRyZXNzVW5kZXJzdG9vZCI6IHRydWUKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogIk1vbmljYSBNLiBNw6FycXVleiIsCiAgICAgICJhZGRyZXNzIjogWwogICAgICAgIHsKICAgICAgICAgICJsaW5lMSI6ICIyIEVhc3QgMTR0aCBBdmVudWUiLAogICAgICAgICAgImNpdHkiOiAiRGVudmVyIiwKICAgICAgICAgICJzdGF0ZSI6ICJDTyIsCiAgICAgICAgICAiemlwIjogIjgwMjAzIgogICAgICAgIH0KICAgICAgXSwKICAgICAgInBhcnR5IjogIk5vbnBhcnRpc2FuIiwKICAgICAgInBob25lcyI6IFsKICAgICAgICAiKDcyMCkgNjI1LTU0NTAiCiAgICAgIF0sCiAgICAgICJ1cmxzIjogWwogICAgICAgICJodHRwczovL3d3dy5jb3VydHMuc3RhdGUuY28udXMvQ291cnRzL1N1cHJlbWVfQ291cnQvIiwKICAgICAgICAiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTW9uaWNhX00lQzMlQTFycXVleiIKICAgICAgXSwKICAgICAgImdlb2NvZGluZ1N1bW1hcmllcyI6IFsKICAgICAgICB7CiAgICAgICAgICAicXVlcnlTdHJpbmciOiAiMiBFLiAxNHRoIEF2ZW51ZSwgRGVudmVyLCBDTyA4MDIwMyIsCiAgICAgICAgICAiZmVhdHVyZUlkIjogewogICAgICAgICAgICAiY2VsbElkIjogIjk3NTgzMTQzMTQxNjgyNTkyOTciLAogICAgICAgICAgICAiZnByaW50IjogIjE2NjYxMzE2NzAxNDEwMDkxMjAyIgogICAgICAgICAgfSwKICAgICAgICAgICJmZWF0dXJlVHlwZSI6ICJ0eXBlQ29tcG91bmRCdWlsZGluZyIsCiAgICAgICAgICAicG9zaXRpb25QcmVjaXNpb25NZXRlcnMiOiA0OS44NDc0NDkyNzI3MjQzMjYsCiAgICAgICAgICAiYWRkcmVzc1VuZGVyc3Rvb2QiOiB0cnVlCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJSaWNoYXJkIEwuIEdhYnJpZWwiLAogICAgICAiYWRkcmVzcyI6IFsKICAgICAgICB7CiAgICAgICAgICAibGluZTEiOiAiMiBFYXN0IDE0dGggQXZlbnVlIiwKICAgICAgICAgICJjaXR5IjogIkRlbnZlciIsCiAgICAgICAgICAic3RhdGUiOiAiQ08iLAogICAgICAgICAgInppcCI6ICI4MDIwMyIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJwYXJ0eSI6ICJOb25wYXJ0aXNhbiIsCiAgICAgICJwaG9uZXMiOiBbCiAgICAgICAgIig3MjApIDYyNS01NDQwIgogICAgICBdLAogICAgICAidXJscyI6IFsKICAgICAgICAiaHR0cHM6Ly93d3cuY291cnRzLnN0YXRlLmNvLnVzL0NvdXJ0cy9TdXByZW1lX0NvdXJ0LyIsCiAgICAgICAgImh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1JpY2hhcmRfTC5fR2FicmllbCIKICAgICAgXSwKICAgICAgImdlb2NvZGluZ1N1bW1hcmllcyI6IFsKICAgICAgICB7CiAgICAgICAgICAicXVlcnlTdHJpbmciOiAiMiBFLiAxNHRoIEF2ZW51ZSwgRGVudmVyLCBDTyA4MDIwMyIsCiAgICAgICAgICAiZmVhdHVyZUlkIjogewogICAgICAgICAgICAiY2VsbElkIjogIjk3NTgzMTQzMTQxNjgyNTkyOTciLAogICAgICAgICAgICAiZnByaW50IjogIjE2NjYxMzE2NzAxNDEwMDkxMjAyIgogICAgICAgICAgfSwKICAgICAgICAgICJmZWF0dXJlVHlwZSI6ICJ0eXBlQ29tcG91bmRCdWlsZGluZyIsCiAgICAgICAgICAicG9zaXRpb25QcmVjaXNpb25NZXRlcnMiOiA0OS44NDc0NDkyNzI3MjQzMjYsCiAgICAgICAgICAiYWRkcmVzc1VuZGVyc3Rvb2QiOiB0cnVlCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJXaWxsaWFtIFcuIEhvb2QgSUlJIiwKICAgICAgImFkZHJlc3MiOiBbCiAgICAgICAgewogICAgICAgICAgImxpbmUxIjogIjIgRWFzdCAxNHRoIEF2ZW51ZSIsCiAgICAgICAgICAiY2l0eSI6ICJEZW52ZXIiLAogICAgICAgICAgInN0YXRlIjogIkNPIiwKICAgICAgICAgICJ6aXAiOiAiODAyMDMiCiAgICAgICAgfQogICAgICBdLAogICAgICAicGFydHkiOiAiTm9ucGFydGlzYW4iLAogICAgICAicGhvbmVzIjogWwogICAgICAgICIoNzIwKSA2MjUtNTQwMCIKICAgICAgXSwKICAgICAgInVybHMiOiBbCiAgICAgICAgImh0dHBzOi8vd3d3LmNvdXJ0cy5zdGF0ZS5jby51cy9Db3VydHMvU3VwcmVtZV9Db3VydC8iLAogICAgICAgICJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9XaWxsaWFtX1cuX0hvb2RfSUlJIgogICAgICBdLAogICAgICAiZ2VvY29kaW5nU3VtbWFyaWVzIjogWwogICAgICAgIHsKICAgICAgICAgICJxdWVyeVN0cmluZyI6ICIyIEUuIDE0dGggQXZlbnVlLCBEZW52ZXIsIENPIDgwMjAzIiwKICAgICAgICAgICJmZWF0dXJlSWQiOiB7CiAgICAgICAgICAgICJjZWxsSWQiOiAiOTc1ODMxNDMxNDE2ODI1OTI5NyIsCiAgICAgICAgICAgICJmcHJpbnQiOiAiMTY2NjEzMTY3MDE0MTAwOTEyMDIiCiAgICAgICAgICB9LAogICAgICAgICAgImZlYXR1cmVUeXBlIjogInR5cGVDb21wb3VuZEJ1aWxkaW5nIiwKICAgICAgICAgICJwb3NpdGlvblByZWNpc2lvbk1ldGVycyI6IDQ5Ljg0NzQ0OTI3MjcyNDMyNiwKICAgICAgICAgICJhZGRyZXNzVW5kZXJzdG9vZCI6IHRydWUKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogIkJldGggTWNDYW5uIiwKICAgICAgImFkZHJlc3MiOiBbCiAgICAgICAgewogICAgICAgICAgImxpbmUxIjogIjIwMSBXZXN0IENvbGZheCBBdmVudWUiLAogICAgICAgICAgImNpdHkiOiAiRGVudmVyIiwKICAgICAgICAgICJzdGF0ZSI6ICJDTyIsCiAgICAgICAgICAiemlwIjogIjgwMjAyIgogICAgICAgIH0KICAgICAgXSwKICAgICAgInBhcnR5IjogIkRlbW9jcmF0aWMgUGFydHkiLAogICAgICAicGhvbmVzIjogWwogICAgICAgICIoNzIwKSA5MTMtOTAwMCIKICAgICAgXSwKICAgICAgInVybHMiOiBbCiAgICAgICAgImh0dHBzOi8vd3d3LmRlbnZlcmRhLm9yZy8iCiAgICAgIF0sCiAgICAgICJlbWFpbHMiOiBbCiAgICAgICAgImluZm9AZGVudmVyZGEub3JnIgogICAgICBdLAogICAgICAiZ2VvY29kaW5nU3VtbWFyaWVzIjogWwogICAgICAgIHsKICAgICAgICAgICJxdWVyeVN0cmluZyI6ICIyMDEgVy4gQ29sZmF4IEF2ZW51ZSA4dGggRmxvb3IsIERlbnZlciwgQ08gODAyMDIiLAogICAgICAgICAgImZlYXR1cmVJZCI6IHsKICAgICAgICAgICAgImNlbGxJZCI6ICI5NzU4MzA3MzQ2MjcwOTEyMjc3IiwKICAgICAgICAgICAgImZwcmludCI6ICIxODA3MDIzOTk1NzkwNDg2OTAzMSIKICAgICAgICAgIH0sCiAgICAgICAgICAiZmVhdHVyZVR5cGUiOiAidHlwZUNvbXBvdW5kU2VjdGlvbiIsCiAgICAgICAgICAicG9zaXRpb25QcmVjaXNpb25NZXRlcnMiOiA5NS44MTY5MjkzMjQxNTE3NTgsCiAgICAgICAgICAiYWRkcmVzc1VuZGVyc3Rvb2QiOiB0cnVlCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJNaWNoYWVsIEhhbmNvY2siLAogICAgICAiYWRkcmVzcyI6IFsKICAgICAgICB7CiAgICAgICAgICAibGluZTEiOiAiMTQzNyBCYW5ub2NrIFN0cmVldCIsCiAgICAgICAgICAiY2l0eSI6ICJEZW52ZXIiLAogICAgICAgICAgInN0YXRlIjogIkNPIiwKICAgICAgICAgICJ6aXAiOiAiODAyMDIiCiAgICAgICAgfQogICAgICBdLAogICAgICAicGFydHkiOiAiTm9ucGFydGlzYW4iLAogICAgICAicGhvbmVzIjogWwogICAgICAgICIoNzIwKSA4NjUtOTAwMCIKICAgICAgXSwKICAgICAgInVybHMiOiBbCiAgICAgICAgImh0dHBzOi8vd3d3LmRlbnZlcmdvdi5vcmcvY29udGVudC9kZW52ZXJnb3YvZW4vbWF5b3JzLW9mZmljZS5odG1sIgogICAgICBdLAogICAgICAicGhvdG9VcmwiOiAiaHR0cHM6Ly93d3cuZGVudmVyZ292Lm9yZy9jb250ZW50L2RhbS9kZW52ZXJnb3YvUG9ydGFscy83MjgvaW1hZ2VzL01heW9yLUhhbmNvY2stV2ViLmpwZyIsCiAgICAgICJlbWFpbHMiOiBbCiAgICAgICAgIm1pbGVoaWdobWF5b3JAZGVudmVyZ292Lm9yZyIKICAgICAgXSwKICAgICAgImNoYW5uZWxzIjogWwogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIkZhY2Vib29rIiwKICAgICAgICAgICJpZCI6ICI1MjgwbWF5b3IiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJUd2l0dGVyIiwKICAgICAgICAgICJpZCI6ICJNYXlvckhhbmNvY2siCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJZb3VUdWJlIiwKICAgICAgICAgICJpZCI6ICJtYXlvcm1pY2hhZWxiaGFuY29jayIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJnZW9jb2RpbmdTdW1tYXJpZXMiOiBbCiAgICAgICAgewogICAgICAgICAgInF1ZXJ5U3RyaW5nIjogIjE0MzcgQmFubm9jayBTdHJlZXQgUm0gMzUwIERlbnZlciwgQ08gODAyMDIiLAogICAgICAgICAgImZlYXR1cmVJZCI6IHsKICAgICAgICAgICAgImNlbGxJZCI6ICI5NzU4MzA3MzQ3MTA2MTU1NjE5IiwKICAgICAgICAgICAgImZwcmludCI6ICIxNTM2OTc3ODUzMzc2NDQyMjQzMiIKICAgICAgICAgIH0sCiAgICAgICAgICAiZmVhdHVyZVR5cGUiOiAidHlwZUNvbXBvdW5kU2VjdGlvbiIsCiAgICAgICAgICAicG9zaXRpb25QcmVjaXNpb25NZXRlcnMiOiAwLAogICAgICAgICAgImFkZHJlc3NVbmRlcnN0b29kIjogdHJ1ZQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiVGltb3RoeSBNLiBPJ0JyaWVuIiwKICAgICAgImFkZHJlc3MiOiBbCiAgICAgICAgewogICAgICAgICAgImxpbmUxIjogIjIwMSBXIENvbGZheCBBdmUgRGVwdCA3MDUiLAogICAgICAgICAgImNpdHkiOiAiRGVudmVyIiwKICAgICAgICAgICJzdGF0ZSI6ICJDTyIsCiAgICAgICAgICAiemlwIjogIjgwMjAyIgogICAgICAgIH0KICAgICAgXSwKICAgICAgInBhcnR5IjogIk5vbnBhcnRpc2FuIiwKICAgICAgInBob25lcyI6IFsKICAgICAgICAiKDcyMCkgOTEzLTUwMDAiCiAgICAgIF0sCiAgICAgICJ1cmxzIjogWwogICAgICAgICJodHRwczovL2RlbnZlcmF1ZGl0b3Iub3JnLyIKICAgICAgXSwKICAgICAgImVtYWlscyI6IFsKICAgICAgICAiYXVkaXRvckBkZW52ZXJnb3Yub3JnIgogICAgICBdLAogICAgICAiY2hhbm5lbHMiOiBbCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAiRmFjZWJvb2siLAogICAgICAgICAgImlkIjogIkRlbnZlckF1ZGl0b3JPQnJpZW4iCiAgICAgICAgfQogICAgICBdLAogICAgICAiZ2VvY29kaW5nU3VtbWFyaWVzIjogWwogICAgICAgIHsKICAgICAgICAgICJxdWVyeVN0cmluZyI6ICIyMDEgVyBDb2xmYXggQXZlLCBEZXB0IDcwNSBEZW52ZXIgQ08gODAyMDIiLAogICAgICAgICAgImZlYXR1cmVJZCI6IHsKICAgICAgICAgICAgImNlbGxJZCI6ICI5NzU4MzA3NzE2MzY2ODA2Mjc5IiwKICAgICAgICAgICAgImZwcmludCI6ICIxNzA3MzA2MzAxMjMzMzk2MDI1NCIKICAgICAgICAgIH0sCiAgICAgICAgICAiZmVhdHVyZVR5cGUiOiAidHlwZUNvbXBvdW5kU2VjdGlvbiIsCiAgICAgICAgICAicG9zaXRpb25QcmVjaXNpb25NZXRlcnMiOiAwLAogICAgICAgICAgImFkZHJlc3NVbmRlcnN0b29kIjogZmFsc2UKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogIlBhdWwgTMOzcGV6IiwKICAgICAgImFkZHJlc3MiOiBbCiAgICAgICAgewogICAgICAgICAgImxpbmUxIjogIjIwMSBXZXN0IENvbGZheCBBdmVudWUiLAogICAgICAgICAgImNpdHkiOiAiRGVudmVyIiwKICAgICAgICAgICJzdGF0ZSI6ICJDTyIsCiAgICAgICAgICAiemlwIjogIjgwMjAyIgogICAgICAgIH0KICAgICAgXSwKICAgICAgInBhcnR5IjogIk5vbnBhcnRpc2FuIiwKICAgICAgInBob25lcyI6IFsKICAgICAgICAiKDcyMCkgODY1LTg0MDAiCiAgICAgIF0sCiAgICAgICJ1cmxzIjogWwogICAgICAgICJodHRwczovL3d3dy5kZW52ZXJnb3Yub3JnL2NvbnRlbnQvZGVudmVyZ292L2VuL2RlbnZlci1vZmZpY2Utb2YtdGhlLWNsZXJrLWFuZC1yZWNvcmRlci9jb250YWN0Lmh0bWwiCiAgICAgIF0sCiAgICAgICJlbWFpbHMiOiBbCiAgICAgICAgImNsZXJrYW5kcmVjb3JkZXJAZGVudmVyZ292Lm9yZyIKICAgICAgXSwKICAgICAgImNoYW5uZWxzIjogWwogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIkZhY2Vib29rIiwKICAgICAgICAgICJpZCI6ICJEZW52ZXJDbGVyayIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIlR3aXR0ZXIiLAogICAgICAgICAgImlkIjogIkRlbnZlckVsZWN0aW9ucyIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJnZW9jb2RpbmdTdW1tYXJpZXMiOiBbCiAgICAgICAgewogICAgICAgICAgInF1ZXJ5U3RyaW5nIjogIjIwMSBXLiBDb2xmYXggQXZlbnVlIERlcHQuIDEwMSBEZW52ZXIsIENPIDgwMjAyIiwKICAgICAgICAgICJmZWF0dXJlSWQiOiB7CiAgICAgICAgICAgICJjZWxsSWQiOiAiOTc1ODMwNzM0NjI3MDkxMjI3NyIsCiAgICAgICAgICAgICJmcHJpbnQiOiAiNzAyNjk5MDAxMTEzMTQwNDQxNiIKICAgICAgICAgIH0sCiAgICAgICAgICAiZmVhdHVyZVR5cGUiOiAidHlwZUNvbXBvdW5kU2VjdGlvbiIsCiAgICAgICAgICAicG9zaXRpb25QcmVjaXNpb25NZXRlcnMiOiA5NS44MTY5MjkzMjQxNTE3NTgsCiAgICAgICAgICAiYWRkcmVzc1VuZGVyc3Rvb2QiOiB0cnVlCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJEZWJvcmFoIFwiRGViYmllXCIgT3J0ZWdhIiwKICAgICAgImFkZHJlc3MiOiBbCiAgICAgICAgewogICAgICAgICAgImxpbmUxIjogIjE0MzcgQmFubm9jayBTdHJlZXQiLAogICAgICAgICAgImNpdHkiOiAiRGVudmVyIiwKICAgICAgICAgICJzdGF0ZSI6ICJDTyIsCiAgICAgICAgICAiemlwIjogIjgwMjAyIgogICAgICAgIH0KICAgICAgXSwKICAgICAgInBhcnR5IjogIk5vbnBhcnRpc2FuIiwKICAgICAgInBob25lcyI6IFsKICAgICAgICAiKDcyMCkgMzM3LTIwMDAiCiAgICAgIF0sCiAgICAgICJ1cmxzIjogWwogICAgICAgICJodHRwczovL2RlbnZlcmdvdi5vcmcvR292ZXJubWVudC9FbGVjdGVkLU9mZmljaWFscy9EZW52ZXItQ2l0eS1Db3VuY2lsIgogICAgICBdLAogICAgICAicGhvdG9VcmwiOiAiaHR0cHM6Ly93d3cuZGVudmVyZ292Lm9yZy9jb250ZW50L2RhbS9kZW52ZXJnb3YvUG9ydGFscy82OTUvaW1hZ2VzL0NvdW5jaWxIZWFkc2hvdHMvRGVib3JhaE9ydGVnYV93ZWIuanBnIiwKICAgICAgImVtYWlscyI6IFsKICAgICAgICAib3J0ZWdhYXRsYXJnZUBkZW52ZXJnb3Yub3JnIgogICAgICBdLAogICAgICAiY2hhbm5lbHMiOiBbCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAiRmFjZWJvb2siLAogICAgICAgICAgImlkIjogIm9ydGVnYWF0bGFyZ2UiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJUd2l0dGVyIiwKICAgICAgICAgICJpZCI6ICJvcnRlZ2FhdGxhcmdlIgogICAgICAgIH0KICAgICAgXSwKICAgICAgImdlb2NvZGluZ1N1bW1hcmllcyI6IFsKICAgICAgICB7CiAgICAgICAgICAicXVlcnlTdHJpbmciOiAiMTQzNyBCYW5ub2NrIFN0cmVldCAjNDUxIERlbnZlciwgQ08gODAyMDIiLAogICAgICAgICAgImZlYXR1cmVJZCI6IHsKICAgICAgICAgICAgImNlbGxJZCI6ICI5NzU4MzA3MzQ3MTA2MTU1NjE5IiwKICAgICAgICAgICAgImZwcmludCI6ICI3NDIxMzczMjEzMTYxNTUxNzEzIgogICAgICAgICAgfSwKICAgICAgICAgICJmZWF0dXJlVHlwZSI6ICJ0eXBlQ29tcG91bmRTZWN0aW9uIiwKICAgICAgICAgICJwb3NpdGlvblByZWNpc2lvbk1ldGVycyI6IDAsCiAgICAgICAgICAiYWRkcmVzc1VuZGVyc3Rvb2QiOiB0cnVlCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJSb2JpbiBLbmllY2giLAogICAgICAiYWRkcmVzcyI6IFsKICAgICAgICB7CiAgICAgICAgICAibGluZTEiOiAiMTQzNyBCYW5ub2NrIFN0cmVldCIsCiAgICAgICAgICAiY2l0eSI6ICJEZW52ZXIiLAogICAgICAgICAgInN0YXRlIjogIkNPIiwKICAgICAgICAgICJ6aXAiOiAiODAyMDIiCiAgICAgICAgfQogICAgICBdLAogICAgICAicGFydHkiOiAiTm9ucGFydGlzYW4iLAogICAgICAicGhvbmVzIjogWwogICAgICAgICIoNzIwKSAzMzctMjAwMCIKICAgICAgXSwKICAgICAgInVybHMiOiBbCiAgICAgICAgImh0dHBzOi8vZGVudmVyZ292Lm9yZy9Hb3Zlcm5tZW50L0VsZWN0ZWQtT2ZmaWNpYWxzL0RlbnZlci1DaXR5LUNvdW5jaWwiCiAgICAgIF0sCiAgICAgICJwaG90b1VybCI6ICJodHRwczovL3d3dy5kZW52ZXJnb3Yub3JnL2NvbnRlbnQvZGFtL2RlbnZlcmdvdi9Qb3J0YWxzLzY5NS9pbWFnZXMvQ291bmNpbEhlYWRzaG90cy9Sb2JpbktuaWVjaF93ZWIuanBnIiwKICAgICAgImVtYWlscyI6IFsKICAgICAgICAia25pZWNoYXRsYXJnZUBkZW52ZXJnb3Yub3JnIgogICAgICBdLAogICAgICAiY2hhbm5lbHMiOiBbCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAiRmFjZWJvb2siLAogICAgICAgICAgImlkIjogIkNpdHlDb3VuY2lsd29tYW5Sb2JpbktuaWVjaCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIlR3aXR0ZXIiLAogICAgICAgICAgImlkIjogIktuaWVjaEF0TGFyZ2UiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJZb3VUdWJlIiwKICAgICAgICAgICJpZCI6ICJVQzNUcktNdVJYV2lfS3NXQXY1MGFhakEiCiAgICAgICAgfQogICAgICBdLAogICAgICAiZ2VvY29kaW5nU3VtbWFyaWVzIjogWwogICAgICAgIHsKICAgICAgICAgICJxdWVyeVN0cmluZyI6ICIxNDM3IEJhbm5vY2sgU3RyZWV0ICM0NTEgRGVudmVyLCBDTyA4MDIwMiIsCiAgICAgICAgICAiZmVhdHVyZUlkIjogewogICAgICAgICAgICAiY2VsbElkIjogIjk3NTgzMDczNDcxMDYxNTU2MTkiLAogICAgICAgICAgICAiZnByaW50IjogIjc0MjEzNzMyMTMxNjE1NTE3MTMiCiAgICAgICAgICB9LAogICAgICAgICAgImZlYXR1cmVUeXBlIjogInR5cGVDb21wb3VuZFNlY3Rpb24iLAogICAgICAgICAgInBvc2l0aW9uUHJlY2lzaW9uTWV0ZXJzIjogMCwKICAgICAgICAgICJhZGRyZXNzVW5kZXJzdG9vZCI6IHRydWUKICAgICAgICB9CiAgICAgIF0KICAgIH0KICBdCn0K
  recorded_at: Sat, 29 Jan 2022 12:18:01 GMT
- request:
    method: get
    uri: https://www.googleapis.com/civicinfo/v2/representatives?address=1551%20Utica%20Street,%20Denver,%20CO%2080204&fields=offices,officials&key=<google_key>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Sat, 29 Jan 2022 19:06:39 GMT
      Server:
      - ESF
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 29 Jan 2022 19:06:39 GMT
recorded_with: VCR 6.0.0
